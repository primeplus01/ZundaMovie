@描画
--track0:反転,-1,3,-1,1
--track1:縮小率,0.01,100,100,0.01
--track2:オフセットX,-5000,5000,0,1
--track3:オフセットY,-5000,5000,0,1
if obj.track0 ~= -1 then
  PSD:addstate("L." .. obj.track0)
end
PSD.scale = obj.track1/100
PSD.offsetx = obj.track2
PSD.offsety = obj.track3
local ok, msg = pcall(PSD.render, PSD, obj)
if not ok then require("PSDToolKit").print(obj, msg) end

@パーツ差し替え
--track0:パーツ,0,8,0,1
--dialog:1,a="";2,b="";3,c="";4,d="";5,e="";6,f="";7,g="";8,h="";
PSD:addstate({a, b, c, d, e, f, g, h}, obj.track0)

@口パク あいうえお
--track2:子音処理,0,2,1,1
--check0:口パク準備がなくても有効,1
--dialog:あ,a="";い,i="";う,u="";え,e="";お,o="";ん,n="";
PSD:addstate(require("PSDToolKit").LipSyncLab.new({
  a=a ~= "" and a or nil,
  e=e ~= "" and e or nil,
  i=i ~= "" and i or nil,
  o=o ~= "" and o or nil,
  u=u ~= "" and u or nil,
  N=n ~= "" and n or nil,
}, obj.track2, obj.check0))

@口パク 開閉のみ
--track0:速さ,1,100,1,1
--check0:口パク準備がなくても有効,1
--dialog:開き,a="";ほぼ開き,b="";半開き,c="";ほぼ閉じ,d="";閉じ,e="";
local m = {}
if e ~= "" then table.insert(m, e) end
if d ~= "" then table.insert(m, d) end
if c ~= "" then table.insert(m, c) end
if b ~= "" then table.insert(m, b) end
if a ~= "" then table.insert(m, a) end
PSD:addstate(require("PSDToolKit").LipSyncSimple.new(m, obj.track0, obj.check0))

@目パチ
--track0:間隔(秒),0,60,4,0.01
--track1:速さ,1,100,1,1
--track2:オフセット,0,10000,0,1
--dialog:開き,a="";ほぼ開き,b="";半開き,c="";ほぼ閉じ,d="";閉じ,e="";
local m = {}
if e ~= "" then table.insert(m, e) end
if d ~= "" then table.insert(m, d) end
if c ~= "" then table.insert(m, c) end
if b ~= "" then table.insert(m, b) end
if a ~= "" then table.insert(m, a) end
PSD:addstate(require("PSDToolKit").Blinker.new(m, obj.track0, obj.track1, obj.track2))
